# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  tags:
    include:
      - v*-preview*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- powershell: |
    $lastTagHash = $(git rev-list --tags --max-count=1)
    $lastTagName = $(git describe --tags $lastTagHash)
    $lastRelease = $lastTagName.Substring(1)
    Write-Host "##vso[task.setvariable variable=lastReleaseVersion]$lastRelease"

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:Version=$(lastReleaseVersion)'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'Celeste_Launcher_Gui\bin\Release\net48'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'Celeste_Launcher_Gui\bin\Release\net48'
    archiveFile: '$(Build.ArtifactStagingDirectory)/CelesteLauncher.zip'
    includeRootFolder: false

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'ProjectCeleste'
    repositoryName: 'ProjectCeleste/Celeste.Launcher'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
    isPreRelease: true
    assets: '$(Build.ArtifactStagingDirectory)/CelesteLauncher.zip'